/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables.records;


import java.sql.Date;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.dms.domain.dms.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record11<String, String, Boolean, Boolean, Boolean, Boolean, Boolean, Integer, String, String, Date> {

    private static final long serialVersionUID = -1117092166;

    /**
     * Setter for <code>DMS.USERS.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>DMS.USERS.USERNAME</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DMS.USERS.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DMS.USERS.PASSWORD</code>.
     */
    @NotNull
    @Size(max = 300)
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DMS.USERS.ENABLED</code>.
     */
    public void setEnabled(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>DMS.USERS.ENABLED</code>.
     */
    @NotNull
    public Boolean getEnabled() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>DMS.USERS.ACCOUNT_NON_EXPIRED</code>.
     */
    public void setAccountNonExpired(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>DMS.USERS.ACCOUNT_NON_EXPIRED</code>.
     */
    @NotNull
    public Boolean getAccountNonExpired() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>DMS.USERS.CREDENTIALS_NON_EXPIRED</code>.
     */
    public void setCredentialsNonExpired(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>DMS.USERS.CREDENTIALS_NON_EXPIRED</code>.
     */
    @NotNull
    public Boolean getCredentialsNonExpired() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>DMS.USERS.ACCOUNT_NON_LOCKED</code>.
     */
    public void setAccountNonLocked(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>DMS.USERS.ACCOUNT_NON_LOCKED</code>.
     */
    @NotNull
    public Boolean getAccountNonLocked() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>DMS.USERS.AGREE_PROTOCOL</code>.
     */
    public void setAgreeProtocol(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>DMS.USERS.AGREE_PROTOCOL</code>.
     */
    @NotNull
    public Boolean getAgreeProtocol() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>DMS.USERS.USERS_TYPE_ID</code>.
     */
    public void setUsersTypeId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>DMS.USERS.USERS_TYPE_ID</code>.
     */
    @NotNull
    public Integer getUsersTypeId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DMS.USERS.REAL_NAME</code>.
     */
    public void setRealName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>DMS.USERS.REAL_NAME</code>.
     */
    @Size(max = 30)
    public String getRealName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DMS.USERS.AVATAR</code>.
     */
    public void setAvatar(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>DMS.USERS.AVATAR</code>.
     */
    @Size(max = 64)
    public String getAvatar() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DMS.USERS.JOIN_DATE</code>.
     */
    public void setJoinDate(Date value) {
        set(10, value);
    }

    /**
     * Getter for <code>DMS.USERS.JOIN_DATE</code>.
     */
    public Date getJoinDate() {
        return (Date) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, Boolean, Boolean, Boolean, Boolean, Boolean, Integer, String, String, Date> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, Boolean, Boolean, Boolean, Boolean, Boolean, Integer, String, String, Date> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Users.USERS.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Users.USERS.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Users.USERS.ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Users.USERS.ACCOUNT_NON_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Users.USERS.CREDENTIALS_NON_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Users.USERS.ACCOUNT_NON_LOCKED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return Users.USERS.AGREE_PROTOCOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Users.USERS.USERS_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Users.USERS.REAL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Users.USERS.AVATAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field11() {
        return Users.USERS.JOIN_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component3() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getAgreeProtocol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getUsersTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getRealName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component11() {
        return getJoinDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getAgreeProtocol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getUsersTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getRealName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value11() {
        return getJoinDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value3(Boolean value) {
        setEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value4(Boolean value) {
        setAccountNonExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value5(Boolean value) {
        setCredentialsNonExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value6(Boolean value) {
        setAccountNonLocked(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value7(Boolean value) {
        setAgreeProtocol(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value8(Integer value) {
        setUsersTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value9(String value) {
        setRealName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value10(String value) {
        setAvatar(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value11(Date value) {
        setJoinDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord values(String value1, String value2, Boolean value3, Boolean value4, Boolean value5, Boolean value6, Boolean value7, Integer value8, String value9, String value10, Date value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String username, String password, Boolean enabled, Boolean accountNonExpired, Boolean credentialsNonExpired, Boolean accountNonLocked, Boolean agreeProtocol, Integer usersTypeId, String realName, String avatar, Date joinDate) {
        super(Users.USERS);

        set(0, username);
        set(1, password);
        set(2, enabled);
        set(3, accountNonExpired);
        set(4, credentialsNonExpired);
        set(5, accountNonLocked);
        set(6, agreeProtocol);
        set(7, usersTypeId);
        set(8, realName);
        set(9, avatar);
        set(10, joinDate);
    }
}

/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.dms.domain.dms.tables.School;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolRecord extends UpdatableRecordImpl<SchoolRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -842411829;

    /**
     * Setter for <code>DMS.SCHOOL.SCHOOL_ID</code>.
     */
    public void setSchoolId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>DMS.SCHOOL.SCHOOL_ID</code>.
     */
    public Integer getSchoolId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>DMS.SCHOOL.SCHOOL_NAME</code>.
     */
    public void setSchoolName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DMS.SCHOOL.SCHOOL_NAME</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getSchoolName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return School.SCHOOL.SCHOOL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return School.SCHOOL.SCHOOL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getSchoolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSchoolName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSchoolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSchoolName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolRecord value1(Integer value) {
        setSchoolId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolRecord value2(String value) {
        setSchoolName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchoolRecord
     */
    public SchoolRecord() {
        super(School.SCHOOL);
    }

    /**
     * Create a detached, initialised SchoolRecord
     */
    public SchoolRecord(Integer schoolId, String schoolName) {
        super(School.SCHOOL);

        set(0, schoolId);
        set(1, schoolName);
    }
}

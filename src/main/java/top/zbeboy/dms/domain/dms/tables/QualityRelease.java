/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.dms.domain.dms.Dms;
import top.zbeboy.dms.domain.dms.Indexes;
import top.zbeboy.dms.domain.dms.Keys;
import top.zbeboy.dms.domain.dms.tables.records.QualityReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QualityRelease extends TableImpl<QualityReleaseRecord> {

    private static final long serialVersionUID = 1668691213;

    /**
     * The reference instance of <code>DMS.QUALITY_RELEASE</code>
     */
    public static final QualityRelease QUALITY_RELEASE = new QualityRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QualityReleaseRecord> getRecordType() {
        return QualityReleaseRecord.class;
    }

    /**
     * The column <code>DMS.QUALITY_RELEASE.QUALITY_RELEASE_ID</code>.
     */
    public final TableField<QualityReleaseRecord, String> QUALITY_RELEASE_ID = createField("QUALITY_RELEASE_ID", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>DMS.QUALITY_RELEASE.RELEASE_TITLE</code>.
     */
    public final TableField<QualityReleaseRecord, String> RELEASE_TITLE = createField("RELEASE_TITLE", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>DMS.QUALITY_RELEASE.YEAR</code>.
     */
    public final TableField<QualityReleaseRecord, String> YEAR = createField("YEAR", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>DMS.QUALITY_RELEASE.TERM</code>.
     */
    public final TableField<QualityReleaseRecord, Integer> TERM = createField("TERM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DMS.QUALITY_RELEASE.RELEASE_DATE</code>.
     */
    public final TableField<QualityReleaseRecord, Timestamp> RELEASE_DATE = createField("RELEASE_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>DMS.QUALITY_RELEASE.USERNAME</code>.
     */
    public final TableField<QualityReleaseRecord, String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>DMS.QUALITY_RELEASE</code> table reference
     */
    public QualityRelease() {
        this(DSL.name("QUALITY_RELEASE"), null);
    }

    /**
     * Create an aliased <code>DMS.QUALITY_RELEASE</code> table reference
     */
    public QualityRelease(String alias) {
        this(DSL.name(alias), QUALITY_RELEASE);
    }

    /**
     * Create an aliased <code>DMS.QUALITY_RELEASE</code> table reference
     */
    public QualityRelease(Name alias) {
        this(alias, QUALITY_RELEASE);
    }

    private QualityRelease(Name alias, Table<QualityReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private QualityRelease(Name alias, Table<QualityReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dms.DMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_66, Indexes.PRIMARY_KEY_66);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QualityReleaseRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_66;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QualityReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<QualityReleaseRecord>>asList(Keys.CONSTRAINT_66);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QualityReleaseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QualityReleaseRecord, ?>>asList(Keys.CONSTRAINT_668);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QualityRelease as(String alias) {
        return new QualityRelease(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QualityRelease as(Name alias) {
        return new QualityRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QualityRelease rename(String name) {
        return new QualityRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QualityRelease rename(Name name) {
        return new QualityRelease(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.dms.domain.dms.tables.Department;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentRecord extends UpdatableRecordImpl<DepartmentRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 568075057;

    /**
     * Setter for <code>DMS.DEPARTMENT.DEPARTMENT_ID</code>.
     */
    public void setDepartmentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>DMS.DEPARTMENT.DEPARTMENT_ID</code>.
     */
    public Integer getDepartmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>DMS.DEPARTMENT.DEPARTMENT_NAME</code>.
     */
    public void setDepartmentName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DMS.DEPARTMENT.DEPARTMENT_NAME</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getDepartmentName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DMS.DEPARTMENT.COLLEGE_ID</code>.
     */
    public void setCollegeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>DMS.DEPARTMENT.COLLEGE_ID</code>.
     */
    @NotNull
    public Integer getCollegeId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Department.DEPARTMENT.DEPARTMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Department.DEPARTMENT.DEPARTMENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Department.DEPARTMENT.COLLEGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDepartmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDepartmentName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCollegeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDepartmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDepartmentName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCollegeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepartmentRecord value1(Integer value) {
        setDepartmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepartmentRecord value2(String value) {
        setDepartmentName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepartmentRecord value3(Integer value) {
        setCollegeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DepartmentRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartmentRecord
     */
    public DepartmentRecord() {
        super(Department.DEPARTMENT);
    }

    /**
     * Create a detached, initialised DepartmentRecord
     */
    public DepartmentRecord(Integer departmentId, String departmentName, Integer collegeId) {
        super(Department.DEPARTMENT);

        set(0, departmentId);
        set(1, departmentName);
        set(2, collegeId);
    }
}

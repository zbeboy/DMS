/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.dms.domain.dms.tables.College;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollegeRecord extends UpdatableRecordImpl<CollegeRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = -46391841;

    /**
     * Setter for <code>DMS.COLLEGE.COLLEGE_ID</code>.
     */
    public void setCollegeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>DMS.COLLEGE.COLLEGE_ID</code>.
     */
    public Integer getCollegeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>DMS.COLLEGE.COLLEGE_NAME</code>.
     */
    public void setCollegeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DMS.COLLEGE.COLLEGE_NAME</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getCollegeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DMS.COLLEGE.COLLEGE_ADDRESS</code>.
     */
    public void setCollegeAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>DMS.COLLEGE.COLLEGE_ADDRESS</code>.
     */
    @NotNull
    @Size(max = 500)
    public String getCollegeAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DMS.COLLEGE.SCHOOL_ID</code>.
     */
    public void setSchoolId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>DMS.COLLEGE.SCHOOL_ID</code>.
     */
    @NotNull
    public Integer getSchoolId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return College.COLLEGE.COLLEGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return College.COLLEGE.COLLEGE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return College.COLLEGE.COLLEGE_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return College.COLLEGE.SCHOOL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCollegeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCollegeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCollegeAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getSchoolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCollegeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCollegeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCollegeAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSchoolId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollegeRecord value1(Integer value) {
        setCollegeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollegeRecord value2(String value) {
        setCollegeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollegeRecord value3(String value) {
        setCollegeAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollegeRecord value4(Integer value) {
        setSchoolId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollegeRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollegeRecord
     */
    public CollegeRecord() {
        super(College.COLLEGE);
    }

    /**
     * Create a detached, initialised CollegeRecord
     */
    public CollegeRecord(Integer collegeId, String collegeName, String collegeAddress, Integer schoolId) {
        super(College.COLLEGE);

        set(0, collegeId);
        set(1, collegeName);
        set(2, collegeAddress);
        set(3, schoolId);
    }
}

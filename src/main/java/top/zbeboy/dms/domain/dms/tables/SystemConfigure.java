/*
 * This file is generated by jOOQ.
*/
package top.zbeboy.dms.domain.dms.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.dms.domain.dms.Dms;
import top.zbeboy.dms.domain.dms.Indexes;
import top.zbeboy.dms.domain.dms.Keys;
import top.zbeboy.dms.domain.dms.tables.records.SystemConfigureRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemConfigure extends TableImpl<SystemConfigureRecord> {

    private static final long serialVersionUID = -284652551;

    /**
     * The reference instance of <code>DMS.SYSTEM_CONFIGURE</code>
     */
    public static final SystemConfigure SYSTEM_CONFIGURE = new SystemConfigure();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemConfigureRecord> getRecordType() {
        return SystemConfigureRecord.class;
    }

    /**
     * The column <code>DMS.SYSTEM_CONFIGURE.DATA_KEY</code>.
     */
    public final TableField<SystemConfigureRecord, String> DATA_KEY = createField("DATA_KEY", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>DMS.SYSTEM_CONFIGURE.DATA_VALUE</code>.
     */
    public final TableField<SystemConfigureRecord, String> DATA_VALUE = createField("DATA_VALUE", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>DMS.SYSTEM_CONFIGURE</code> table reference
     */
    public SystemConfigure() {
        this(DSL.name("SYSTEM_CONFIGURE"), null);
    }

    /**
     * Create an aliased <code>DMS.SYSTEM_CONFIGURE</code> table reference
     */
    public SystemConfigure(String alias) {
        this(DSL.name(alias), SYSTEM_CONFIGURE);
    }

    /**
     * Create an aliased <code>DMS.SYSTEM_CONFIGURE</code> table reference
     */
    public SystemConfigure(Name alias) {
        this(alias, SYSTEM_CONFIGURE);
    }

    private SystemConfigure(Name alias, Table<SystemConfigureRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemConfigure(Name alias, Table<SystemConfigureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dms.DMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SystemConfigureRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_D;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SystemConfigureRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemConfigureRecord>>asList(Keys.CONSTRAINT_D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemConfigure as(String alias) {
        return new SystemConfigure(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemConfigure as(Name alias) {
        return new SystemConfigure(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConfigure rename(String name) {
        return new SystemConfigure(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConfigure rename(Name name) {
        return new SystemConfigure(name, null);
    }
}
